efficiency is important in an OS
- services are used very often

pseudo code syntax used in this unit resembles Python


multiplication
- x, y >= 0
- N is largest number that we may be asked to multiply


== multiplication strategy - repetitive addition ==

multiply(x,y):
  sum = 0
  for i = 0 ... y - 1 do
    sum = sum + x
  return sum

run-time
- proportional to N (linear)
==========


== multiplication strategy - binary multiplication ==
w-bit numbers

multiply(x,y):
  sum = 0
  shiftedX = x
  for i = 0 ... w - 1 do
    if (ith bit of y == 1)
      sum = sum + shiftedX
    shiftedX = shifted X * 2
  return sum

run-time
- proportional to w (number of bits required to represent N)
- w = log_2(N)

shift, addition can be implemented efficiently in either software or hardware
==========

