class SquareGame {
  field Square square;
  // 0=none, 1=up, 2=down, 3=left, 4=right
  field int direction;

  constructor SquareGame new() {
    let square = Square.new(100, 100, 29);
    let direction = 0;
    return this;
  }

  method void dispose() {
    do square.dispose();
    do Memory.deAlloc(this);
    return;
  }

  method void moveSquare() {
    if (direction = 1){ do square.moveUp(); }
    if (direction = 2){ do square.moveDown(); }
    if (direction = 3){ do square.moveLeft(); }
    if (direction = 4){ do square.moveRight(); }

    do Sys.wait(5);
    return;
  }

  method void run() {
    var char key; // key currently pressed (0 if released)
    var boolean exit;
    let exit = false;

    while (~exit) {
      while (key = 0) { // no key selected
        let key = Keyboard.keyPressed();
        do moveSquare();
      }

      if (key = 81) { let exit = true; } // q
      if (key = 90) { do square.decSize(); } // z
      if (key = 88) { do square.incSize(); } // x
      if (key = 131) { let direction = 1; } // up
      if (key = 133) { let direction = 2; } // down
      if (key = 130) { let direction = 3; } // left
      if (key = 132) { let direction = 4; } // right

      while (~(key = 0)) { // wait for key to be released
        let key = Keyboard.keyPressed();
        do moveSquare();
      }
    }
    return;
  }
}
