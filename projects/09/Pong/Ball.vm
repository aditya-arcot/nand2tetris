function Ball.new 0
push constant 9
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 4
push argument 3
pop this 5
push argument 4
pop this 6
push argument 5
pop this 7
push argument 6
pop this 8
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 4
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.eraseOld 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 2
push this 3
push this 4
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push this 0
pop this 2
push this 1
pop this 3
push this 0
push this 7
push this 5
call Math.multiply 2
add
pop this 0
push this 1
push this 8
push this 6
call Math.multiply 2
add
pop this 1
push pointer 0
call Ball.checkCollisions 1
pop temp 0
push pointer 0
call Ball.eraseOld 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.checkCollisions 0
push argument 0
pop pointer 0
push this 0
push this 4
sub
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
pop this 0
push this 5
neg
pop this 5
label IF_FALSE0
push this 0
push this 4
add
push constant 511
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 511
push this 4
sub
pop this 0
push this 5
neg
pop this 5
label IF_FALSE1
push this 1
push this 4
sub
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 4
pop this 1
push this 6
neg
pop this 6
label IF_FALSE2
push this 1
push this 4
add
push constant 255
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 255
push this 4
sub
pop this 1
push this 6
neg
pop this 6
label IF_FALSE3
push constant 0
return
